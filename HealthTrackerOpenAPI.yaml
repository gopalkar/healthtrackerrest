openapi: 3.0.0
info:
  version: 1.0.0
  title: Health Tracker API
  description: This API provides endpoints for handling CRUD operations on the Health Tracker data.
  contact:
    name: Karthikeyan Gopal
    email: 20099187@mail.wit.ie
paths:
  /api/users/{user-id}:
    get:
      parameters:
        - $ref: '#/components/parameters/UserIdPath'
      responses:
        200:
          description: This is a user for given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: User Not Found
    patch:
      parameters:
        - $ref: '#/components/parameters/UserIdPath'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        204:
          description: This user has been updated
        404:
          description: Failed to update User
    delete:
      parameters:
        - $ref: '#/components/parameters/UserIdPath'
      responses:
        204:
          description: This user has been deleted
        404:
          description: Failed to delete User
  /api/users:
    get:
      responses:
        200:
          description: This is a list of users in the app
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        404:
          description: No user records found
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        201:
          description: The user has been created
  /api/users/{email-id}:
    get:
      parameters:
        - $ref: '#/components/parameters/EmailIdPath'
      responses:
        200:
          description: This is the user for given email
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: User not found for given email-id
  /api/activities/{user-id}:
    get:
      parameters:
        - $ref: '#/components/parameters/UserIdPath'
      responses:
        200:
          description: These are the activities for given user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity'
        404:
          description: Activities not found for given user-id
    delete:
      parameters:
        - $ref: '#/components/parameters/UserIdPath'
      responses:
        204:
          description: All activities for given user has been deleted
        404:
          description: Activities not found for given user
  /api/actvities:
    get:
      responses:
        200:
          description: These are the activities
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity'
        404:
          description: No activities found
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
      responses:
        201:
          description: This activity has been added
  /api/activity/{activity-id}:
    get:
      parameters:
        - $ref: '#/components/parameters/ActivityIdPath'
      responses:
        200:
          description: This is the activity for given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
    delete:
      parameters:
        - $ref: '#/components/parameters/ActivityIdPath'
      responses:
        200:
          description: This activity has been deletd
    patch:
      parameters:
        - $ref: '#/components/parameters/ActivityIdPath'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
      responses:
        200:
          description: This activity has been updated
  /api/measurements/{user-id}:
    get:
      parameters:
        - $ref: '#/components/parameters/UserIdPath'
        - $ref: '#/components/parameters/StartDate'
        - $ref: '#/components/parameters/EndDate'
      responses:
        200:
          description: These are the measurements for given user id and dates
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Measurement'
        404:
          description: Measurements not found for given user-id
    delete:
      parameters:
        - $ref: '#/components/parameters/UserIdPath'
      responses:
        204:
          description: All measurements for given user has been deleted
        404:
          description: Measurements not found for given user
  /api/measurements:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Measurement'
      responses:
        201:
          description: This measurement has been added
  /api/measurements/{measurement-id}:
    get:
      parameters:
        - $ref: '#/components/parameters/MeasurementIdPath'
      responses:
        200:
          description: This is the measurement for given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Measurement'
    delete:
      parameters:
        - $ref: '#/components/parameters/MeasurementIdPath'
      responses:
        200:
          description: This measurement has been deleted
    patch:
      parameters:
        - $ref: '#/components/parameters/MeasurementIdPath'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Measurement'
      responses:
        200:
          description: This measurement has been updated
  /api/nutritions/{user-id}:
    get:
      parameters:
        - $ref: '#/components/parameters/UserIdPath'
        - $ref: '#/components/parameters/StartDate'
        - $ref: '#/components/parameters/EndDate'
      responses:
        200:
          description: These are the nutrition consumed by given user id on dates
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Nutrition'
        404:
          description: Nutritions not found for given user-id
    delete:
      parameters:
        - $ref: '#/components/parameters/UserIdPath'
      responses:
        204:
          description: All Nutritions for given user has been deleted
        404:
          description: Nutritions not found for given user
  /api/nutritions:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Nutrition'
      responses:
        201:
          description: This Nutrition has been added
  /api/nutritions/{nutrition-id}:
    get:
      parameters:
        - $ref: '#/components/parameters/NutritionIdPath'
      responses:
        200:
          description: This is the nutrition for given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nutrition'
    delete:
      parameters:
        - $ref: '#/components/parameters/NutritionIdPath'
      responses:
        200:
          description: This nutrition has been deleted
    patch:
      parameters:
        - $ref: '#/components/parameters/NutritionIdPath'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Nutrition'
      responses:
        200:
          description: This nutrition has been updated
  /api/nutrition/search:
    get:
      parameters:
        - $ref: '#/components/parameters/SearchQuery'
      responses:
        200:
          description: This is the nutrient retrieved from edaman for given search query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nutrient'
  /api/usercreds:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCred'
      responses:
        201:
          description: This User Credential has been added
  /api/usercreds/{user-id}:
    get:
      parameters:
        - $ref: '#/components/parameters/UserIdPath'
      responses:
        200:
          description: This is the User Credential for given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCred'
    delete:
      parameters:
        - $ref: '#/components/parameters/UserIdPath'
      responses:
        200:
          description: This User Credential has been deleted
    patch:
      parameters:
        - $ref: '#/components/parameters/UserIdPath'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCred'
      responses:
        200:
          description: This User Credential has been updated
components:
  parameters:
    UserIdPath:
      in: path
      name: user-id
      required: true
      schema:
        type: integer
        example: 2023
    EmailIdPath:
      in: path
      name: email-id
      required: true
      schema:
        type: string
        example: john.smith@gmail.com
    ActivityIdPath:
      in: path
      name: activity-id
      required: true
      schema:
        type: integer
        example: 202301
    MeasurementIdPath:
      in: path
      name: activity-id
      required: true
      schema:
        type: integer
        example: 202301\
    NutritionIdPath:
      in: path
      name: activity-id
      required: true
      schema:
        type: integer
        example: 202301
    StartDate:
      name: startDate
      in: query
      description: The start date of the measurements to filter by
      required: false
      schema:
        type: string
    EndDate:
      name: endDate
      in: query
      description: The end date of the measurements to filter by
      required: false
      schema:
        type: string
    SearchQuery:
      name: searchQuery
      in: query
      description: The Search Query to filter retrieve nutrient from edaman API
      required: false
      schema:
        type: string

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 2023
        name:
          type: string
          example: John Smith
        email:
          type: string
          example: john.smith@gmail.com
        gender:
          type: string
          example: male
        birthDate:
          type: string
          example: 1984-11-03T12:59:27
        mobileNumber:
          type: string
          example: 293-232-9584
        dietPreferences:
          type: string
          example: vegetarian
        height:
          type: string
          example: 5.10
        weight:
          type: integer
          example: 158
        profession:
          type: string
          example: Information Technology
    Activity:
      type: object
      properties:
        id:
          type: integer
          example: 2023
        description:
          type: string
          example: running
        duration:
          type: integer
          example: 60
        calories:
          type: integer
          example: 200
        date:
          type: string
          example: 2023-11-03
        user-id:
          type: integer
          example: 2023
    Measurement:
      type: object
      properties:
        id:
          type: integer
          example: 10
        weight:
          type: string
          example: 150
        chest:
          type: string
          example: 35
        bicep:
          type: string
          example: 12
        neck:
          type: string
          example: 18
        abdomen:
          type: string
          example: 30
        waist:
          type: string
          example: 31
        lowerWaist:
          type: string
          example: 38
        thigh:
          type: string
          example: 20
        cough:
          type: string
          example: 11
        measuredDate:
          type: string
          example: 2023-11-03T12:59:27
        userId:
          type: integer
          example: 20
    UserCred:
      type: object
      properties:
        id:
          type: integer
          example: 20
        password:
          type: string
          example: RGV2YSBTZW5h
        userId:
          type: integer
          example: 20
    Nutrition:
      type: object
      properties:
        id:
          type: integer
          example: 20
        partOfDay:
          type: string
          example: Lunch
        foodName:
          type: string
          example: salmon with Salad
        calories:
          type: integer
          example: 850
        cholesterol:
          type: integer
          example: 20
        protein:
          type: integer
          example: 10
        fat:
          type: integer
          example: 5
        fiber:
          type: integer
          example: 2
        macroDate:
          type: string
          example: 2023-11-03T12:59:27
        userId:
          type: integer
          example: 20
    Nutrient:
      type: object
      properties:
        fibtg:
          type: integer
          example: 2
        procnt:
          type: integer
          example: 18
        fat:
          type: integer
          example: 15
        enerc_KCAL:
          type: integer
          example: 215
        chocdf:
          type: integer
          example: 2
